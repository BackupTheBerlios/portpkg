.TH portpkg 1

.SH NAME

portpkg \- automated package building for Slackware Linux systems

.SH SYNOPSIS

\fBportpkg\fP [\fIaction\fP] [\fIoptions\fP] [\fIexpression\fP [\fI...\fP]]

.SH DESCRIPTION

portpkg is a script to easily find, build and install packages by
scripts. Scripts are based around the de-facto standard of
\fBSlackBuilds\fP, and are expected to be located in a predefined
\fBports tree\fP.

portpkg also does additional work based on meta-information (such as
source code download, dependency handling, etc.) if the scripts support
portpkg-specific extensions. Backends are common Slackware \fBpkgtool\fP
commands (\fBinstallpkg\fP, \fBupgradepkg\fP).

It is recommended to use portpkg as unprivileged user and enter the root
password when prompted to do so.

.SH EXPRESSIONS

Presumed that all port identifiers belong to the form
\fIgroup\fP/\fIname\fP-\fIversion\fP-\fIarchitecture\fP-\fIbuild\fP
where \fIgroup\fP describes the path from the ports tree to the port itself,
portpkg allows four different ways to express a target:
.TP
.B implicit
By using the form \fIgroup\fP/. Resulting in a range of ports.
Ports matching expressions in the variable \fBEXCLUDE\fP are excluded.
.TP
.B explicit
By using the form
\fIgroup\fP/\fIname\fP or just \fIname\fP.
Resulting in the default version only. (Up to version 0.38: this is the
first listed non-restricted port, from version 0.39 on: the most recent
non-restricted version.
Also, up to version 0.38 the form
[\fIgroup\fP/]\fIname\fP[-\fIversion\fP-\fIarch\fP-\fIbuild\fP]
was possible.)
.TP
.B indirect
By changing into the directory of the build script an leaving
\fIexpression\fP empty. In indirect mode, dependencies resolution is
disabled, missing dependencies still prevent the execution of the build
script, but no recursive installation is performed. Usable also for
build scripts that are outside of the defined ports tree, which would be
ignored otherwise.
.TP
.B descriptive
By using a regular expression with the form
\fB/\fP\fIregex\fP\fB/\fP
that is representative for the whole identifier.

.SH OPTIONS

There can be multiple options at once to customise portpkg's behaviour (some of 
them can also be defined in your configuration file, see below):
.TP
\fB-e\fP, \fB--reinstall\fP (\fBREINSTALL=true\fP)
Reinstall a package, if already installed.
In conjunction with \fB--diff\fP or \fB--upgrade\fP:
Compare installed packages exactly to that versions that are available.
.TP
\fB-b\fP, \fB--rebuild\fP (\fBREBUILD=true\fP)
Rebuild the package although it is found in the package cache.
.TP
\fB-p\fP, \fB--prepare\fP (\fBPREPARE_ONLY=true\fP)
Build package, but don't install (implies \fB--noreqs\fP).
.TP
\fB-o\fP, \fB--download\fP (\fBDOWNLOAD_ONLY=true\fP)
Download source code files only.
.TP
\fB-g\fP, \fB--verbose\fP (\fBVERBOSE=true\fP)
Show output of compilations, downloads, etc.
In conjunction with \fB--list\fP:
Compare with installed versions (similiar to \fB--diff\fP).
.TP
\fB-y\fP, \fB--dryrun\fP (\fBDRY_RUN=true\fP)
Simulate install/download/build.
.TP
\fB-q\fP, \fB--noreqs\fP (\fBNO_REQS=true\fP)
Don't check for requirements.
.TP
\fB-a\fP, \fB--lazy\fP (\fBLAZY_CHECKS=true\fP)
Lazy version checking:
A dependency is satisfied if any version of a certain package is installed.
In conjunction with \fB--diff\fP or \fB--upgrade\fP:
Skip packages that only differ in architecture or build number.
.TP
\fB-n\fP, \fB--noask\fP (\fBINTERACTIVE=false\fP)
Don't ask for confirmation.
.TP
\fB-m\fP, \fB--maintain\fP (\fBMAINTAIN_ALL=true\fP)
Force to run maintainer mode.
Maintainer mode is different from user mode:
E.g. md5sums of sources won't be checked, instead the actual value will be written into the build script header.
.TP
\fB-r\fP, \fB--remaintain\fP (\fBREMAINTAIN=true\fP)
Skip package building step if possible (implies \fB--prepare --rebuild\fP).
.TP
\fB-w\fP, \fB--exclude\fP \fIexpression\fP (\fBEXCLUDE="\fP\fIexpression\fP\fB")\fP
Exclude \fIexpression\fP from implicit expressions and remove from \fBuse\fP list.
.TP
\fB-j\fP, \fB--ignore\fP \fIexpression\fP (\fBIGNORE="\fP\fIexpression\fP\fB")\fP
Ignore \fIexpression\fP in dependencies lists.
.TP
\fB-t\fP, \fB--use\fP \fIexpression\fP (\fBUSE="\fP\fIexpression\fP\fB")\fP
Include \fIexpression\fP from optional dependencies and remove from \fBexclude\fP list.

.SH ACTIONS

portpkg knows several \fBactions\fP to perform and one \fBdefault action\fP
if none is specified. The default action is to \fBadd\fP, which includes
    * checking dependencies,
    * downloading the source code,
    * running the build script and
    * installing the package.

Some of these steps will be skipped automatically if they seem to be
unnecessary. There are options (see below) to force or to skip some of
these steps. There can be only one \fBalternative action\fP, with
completely different behaviour:
.TP
\fB-d\fP, \fB--diff\fP
List difference between installed and available port versions.
See also \fB--lazy\fP and \fB--reinstall\fP.
.TP
\fB-f\fP, \fB--find\fP \fItext\fP [\fI...\fP]
Find ports by search patterns.
.TP
\fB-h\fP, \fB--help\fP
Show help page.
.TP
\fB-i\fP, \fB--info\fP [\fIexpression\fP [\fI...\fP]]
Show information about ports.
.TP
\fB-l\fP, \fB--list\fP [\fIexpression\fP [\fI...\fP]]
List all (or specified) available ports.
.TP
\fB-s\fP, \fB--sync\fP
Sync the ports tree with the official tree and the package directory
with the ports tree. Depending on your configuration there can be
more/other/no things be done.
.TP
\fB-u\fP, \fB--upgrade\fP
Upgrade all (!) outdated packages.
Use with caution!
See also \fB--diff\fP.
.TP
\fB-v\fP, \fB--version\fP
Show version information about portpkg.
.TP
\fB-x\fP, \fB--export\fP \fIcomment\fP [\fIexpression\fP [\fI...\fP]]
Submit ports to the Portpkg Project and publish them.
To avoid unintentional submissions, \fIcomment\fP has to contain at least two
words.

.SH EXAMPLES

Find port \fImplayer\fP, download source code, compile/package/install it, show
compile output, but don't check dependencies:
    $ \fBportpkg -gq mplayer\fP

Or indirect:
    $ \fBcd ~/ports/xap/mplayer\fP
    $ \fBportpkg -g\fP

Find any ports, that contain the strings \fBbrowser\fP and \fBweb\fP in their
description:
    $ \fBportpkg --find browser web\fP

View meta-information about the port \fBdillo\fP:
    $ \fBportpkg --info dillo\fP

Or indirect:
    $ \fBcd ~/ports/xap/dillo\fP
    $ \fBportpkg -i\fP

List all available ports of one group or with certain conditions and with more
or less precision:
    $ \fBportpkg -l l/\fP
    $ \fBportpkg -l dillo\fP
    $ \fBportpkg -l xap/dillo\fP
    $ \fBportpkg -l dillo-0.8.5-i686-1mbr\fP

Sync the local ports tree with the official ports tree of The Portpkg Project
and then export \fBfancy2000\fP to it:
    $ \fBportpkg --sync\fP
    $ \fBportpkg -x "My initial export." fancy2000\fP

List all upgradeable packages first and then simulate a system upgrade:
    $ \fBportpkg -d\fP
    $ \fBportpkg --dryrun -u\fP

List all upgrades but \fBkde/\fP and \fBkdei/\fP from Slackware.com:
    $ \fBportpkg -de slackware/ -w "kde/ kdei/"\fP

Revert all packages from group \fBa/\fP to the original state:
    $ \fBportpkg -ue slackware/a/\fP

Install amarok and recursively any optional dependencies that are listed in
\fBl/\fP and \fBkde/\fP:
    $ \fBportpkg --use "l/ kde/" amarok\fP

.SH DIRECTORIES

.TP
\fB~/ports\fP
The ports tree. Customise this path with \fBPRT_DIR=\fP\fIpath\fP in
the configuration file.
.TP
\fB~/ports/log\fP
Directory of different log files. Custimise this path with
\fBLOG_DIR=\fP\fIpath\fP in the configuration file.
.TP
\fB~/ports/dist\fP
The source code files archive. Files that were downloaded before compiling.
Customise this path with \fBSRC_DIR=\fP\fIpath\fP in the configuration file.
.TP
\fB~/ports/pkg\fP
The binary packages archive. Customise this path with
\fBPKG_DIR=\fP\fIpath\fP in the configuration file.
.TP
\fB~/ports/plugins\fP
Overlay directory of plugins.

.SH FILES

.TP
\fB~/ports/portpkg.conf\fP
The tree-wide configuration file for optional settings.
Empty or non-existent for defaults.
Can also be set system-wide in \fB/etc/portpkg/local.conf\fP or user-wide
in \fB~/.portpkg.conf\fP.
.LP
Several configuration files always inherit their default settings from \fB/etc/portpkg/\fP:
.TP
\fB~/ports/mirrors\fP
List of mirrors to be used when downloading files.
.TP
\fB~/ports/virtual\fP
List of ports and their virtual groups. Usefull to cross-link ports.
.TP
\fB~/ports/synonyms\fP
List of ports with alternative names.
.LP
Log files:
.TP
\fB~/ports/log/portpkg.log\fP
Debugging output.
.TP
\fB~/ports/log/\fP\fIname\fP\fB.buildlog.gz\fP
The detailed output when a SlackBuild was executed.
Viewed instantly with \fB--verbose\fP.

.SH BUGS

Expressions with more than one group qualifier do only match if the qualifiers´ order match the order of the filesystem.

For example, given the port \fBa/b/c/d-1.0-i486-1\fP, these expressions do match:
    \fBa/d\fP
    \fBb/d-1.0-i486-1me\fP
    \fBc/\fP
    \fBa/b/c/d\fP
    \fBb/c/d\fP

And these expressions do not match:
    \fBc/b/d\fP
    \fBc/a/\fP

.SH SECURITY

todo

.SH AUTHOR

Thomas Pfaff <topf at users dot berlios de>

.SH "SEE ALSO"

\fBinstallpkg\fP(8)
\fBremovepkg\fP(8)
\fBupgradepkg\fP(8)
