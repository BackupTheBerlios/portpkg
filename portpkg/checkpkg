#/bin/sh -u
# checkpkg - a small dialog interface for portpkg portsystem

. `which portpkg` || exit 1

DEL_CMD=${DEL_CMD:-'su -c "removepkg $list 2>&1"'}
if $USE_ALPHA_CODE; then
SYSTEM_PKGEX=slackware.com/slackware/
else
SYSTEM_PKGEX=z/bin/slackware/slackware/
fi

del_pkg() # pkg_exps
{
  local list="$@"
  eval "$DEL_CMD"
}

group_menu() # pkgex [default-item]
{
  local pkgex=$1 default=${2:-}
  local t=`mktemp -d` extra opt
  [ "$default" ] && opt="--default-item $default"
  if [ "$pkgex" = "$SYSTEM_PKGEX" ]; then
    extra="--extra-button --extra-label \"All\" "
  else
    extra="--extra-button --extra-label \"System\" "
  fi
  echo -n "dialog --title \"LIST OF AVAILABLE GROUPS\" --cancel-label \"Quit\" \
$extra \
$opt --menu \"These are the available groups. Select the one you want to look \
into.\" 0 0 0 " >$t/menu
  # don't use any2dir here, because we want the "main" groups
  do_list $1 | sed "s,^$1,," | cut -d / -f 1 | sort -u | sed "
s,^a$,&/ \"System packages\" ,
s,^ap$,&/ \"Applications\" ,
s,^d$,&/ \"Development tools\" ,
s,^e$,&/ \"Emacs editor\" ,
s,^extra$,&/ \"Additional software\" ,
s,^f$,&/ \"FAQS and HOWTOs\" ,
s,^gnome$,&/ \"GNOME Desktop\" ,
s,^k$,&/ \"Linux kernel sources\" ,
s,^kde$,&/ \"KDE Desktop\" ,
s,^kdei$,&/ \"KDE I18n files\" ,
s,^kernels$,&/ \"Kernels\" ,
s,^l$,&/ \"Libraries\" ,
s,^local$,&/ \"Local ports\" ,
s,^n$,&/ \"Network utilities\" ,
s,^open$,&/ \"Contributed (untested)\" ,
s,^patches$,&/ \"Security updates\" ,
s,^pasture$,&/ \"Compatibility packages\" ,
s,^rootdisks$,&/ \"Boot programmes\" ,
s,^t$,&/ \"TeX word processing\" ,
s,^tcl$,&/ \"Tcl and Tk language\" ,
s,^testing$,&/ \"Unstable software\" ,
s,^x$,&/ \"X-Window-system\" ,
s,^xap$,&/ \"X-Applications\" ,
s,^y$,&/ \"Games\" ,
s,^z$,&/ \"Addon trees\" ,
s,^[^ ]*$,&/ & ," | tr "\n" " " >>$t/menu
  . $t/menu
}

check_group() # pkgex
{
  local group=$1
  local t=`mktemp -d` count i loc pkg dir desc
  ls_inst | any2base >$t/inst
#  ls_loc "^.*/$group/[^/]*$" >$t/locs
  ls_loc `regex $group` >$t/locs
  any2gany <$t/locs >$t/gpkgs
  any2base <$t/gpkgs >$t/pkgs
  pkg2name <$t/pkgs >$t/names
  sort -u <$t/names >$t/unames
  count=`wc -l <$t/unames`
  i=0
  echo -n "dialog --item-help --separate-output --cancel-label \"Quit\" \
--extra-button --extra-label \"Cancel\" \
--title \"LIST OF AVAILABLE PORTS IN GROUP `echo $group | tr "a-z" "A-Z"`\" \
--checklist \"These are the available ports in group $group. Installed ports \
are already selected. You can deselect them to remove or select others to \
install them.\" 0 0 0 " >$t/menu
#install them.\" 21 75 12 " >$t/menu
  while read name; do
    loc=`grep -m 1 $(regex $name) $t/locs`
    pkg=`echo $loc | any2base`
    dir=`dirname $loc`
    desc=`grep -hs ^$name: $dir/$name.SlackBuild $dir/$name/SlackBuild \
$dir/$name/slack-desc | head -n 1 | cut -d " " -f 2- | sed "s,[\"],',g"`
    desc=${desc:-}
    [ "`fgrep -xm 1 $pkg $t/inst`" ] \
    && echo \"$name\" \"$desc\" on \"${loc#$PRT_DIR/}\" \\ >>$t/list \
    || echo \"$name\" \"$desc\" off \"${loc#$PRT_DIR/}\" \\ >>$t/list
    i=`expr $i + 1`
    echo `expr 100 \* $i / $count`
  done <$t/unames | dialog --gauge "Searching group $group..." 0 0
  sort $t/list -o $t/list
  cat $t/list >>$t/menu
  . $t/menu 2>$t/pos_names || return
  # compare and install/remove
  fgrep -vxf $t/pos_names $t/unames >$t/neg_names
  for p in `cat $t/neg_names`; do
    pkg=`grep -m 1 $(regex $p) $t/pkgs`
    fgrep -xsq $pkg $t/inst && echo $pkg
  done >$t/list_remove
  if [ -s $t/list_remove ]; then
    clear
    del_pkg `cat $t/list_remove`
#    su -c "removepkg `cat $t/list_remove` 2>&1"
#    # fake a summary
#    echo -e "\nSummary of actions:" >/tmp/portpkg-summary
#    cat $t/list_remove | xargs -l echo "  --> Removed" >>/tmp/portpkg-summary
#    dialog --title "REMOVING PACKAGES" --textbox /tmp/portpkg-summary 0 0
  fi
  for p in `cat $t/pos_names`; do
    pkg=`grep -m 1 $(regex $p) $t/pkgs`
#    fgrep -xsq $pkg $t/inst || echo $pkg
    fgrep -xsq $pkg $t/inst || echo $group/$p
  done >$t/list_install
  if [ -s $t/list_install ]; then
    clear
    portpkg `cat $t/list_install` 2>&1
#    dialog --title "ADDING PACKAGES" --textbox /tmp/portpkg-summary 0 0
  fi
  # /var/log/packages has changed
  rm $CACHE/inst
}

main_menu()
{
  local t=`mktemp -d` last pkgex
#  local last pkgex
  while true; do
    group_menu "$pkgex" "$last" 2>$t/group
    case $? in
      1) break;;
      3) if [ "$pkgex" ]; then
           pkgex=""
         else
           pkgex="$SYSTEM_PKGEX"
         fi
         continue;;
    esac
    last=`cat $t/group`
    check_group "$pkgex$last"
    case $? in
      1) break;;
    esac
  done
}

main_menu
clear
