#!/bin/sh
#BLURB="DroplineGNOME.org binaries"

DROPLINE_VER=${DROPLINE_VER:-2.16}
SOURCE=http://mesh.dl.sourceforge.net/sourceforge/dropline-gnome
FILESSITE=http://droplinegnome.org
FILES="DroplineFiles$DROPLINE_VER"
if $USE_ALPHA_CODE; then
TREE=$PRT_DIR/droplinegnome.org
else
TREE=$PRT_DIR/z/bin/dropline
fi

# check that we're a plug-in
if ! [ "$PRT_DIR" ]; then
  echo "I'm a plugin. Don't run me!"
  exit 1
fi

row "Syncing $TREE"
t=`mktemp -d`
mkdir -p $TREE 2>/dev/null || die "No write access to $TREE!"

# check the first file for changes
first=`echo $FILES | cut -d " " -f 1`
get $FILESSITE/$first $t/$first || die
if [ -f $TREE/$first ] && cmp -s $t/$first $TREE/$first; then
  # exit silently
  exit 0
fi

# get the rest
rest=`echo $FILES | cut -s -d " " -f 2-`
for file in $rest; do
  row "Retrieving $file"
  get $FILESSITE/$file $t/$file
done

# rebuild the tree
row "Rebuilding pseudo ports"
$DRY_RUN && exit 0
rm -rf $TREE
mkdir -p $TREE

while read s; do
  state=`echo "$s" | cut -d : -f 2`
  case $state in obsolete_lib|obsolete_app|replaced) continue;; esac
  file=`echo "$s" | cut -d : -f 1`
  desc=`echo "$s" | cut -d : -f 3`
  md5sum="`echo "$s" | cut -d : -f 5` $file"
  group=`echo "$s" | cut -d : -f 8 | sed -r "s, ,_,g"`
#  group=`echo "$s" | cut -d : -f 8 | sed -r "
#s,Application Development,d,
#s,Desktop Extras,extra,
#s,GNOME Desktop,gnome,
#s,Internet Software,n,
#s,Media Software,xap,
#s,Office Applications,xap,
#s,System Software,l,"`
  pkg=${file%.tgz}
  name=${pkg%-*-*-*}
  rel=${pkg#$name-}
  ver=${rel%%-*}
  arch=${rel%-*}
  arch=${arch#*-}
  build=${rel##*-}
  desc=`echo "$desc" | fmt -s -w $((75 - ${#name})) | sed "s,^,$name: ,"`

  # make the SlackBuild
  path=$TREE/$group
  mkdir -p $path
  cat >$path/$name.SlackBuild <<EOF
#!/bin/sh
# This is a pseudo port--it may look absurd
# MAINTAINER: Portpkg Project <portpkg-devel@lists.berlios.de>
# SOURCES: $SOURCE/$pkg.tgz
# MD5SUMS: $md5sum

TMP=\${TMP:-/tmp}

VERSION=$ver
ARCH=$arch
BUILD=$build

cat >/dev/null <<eof
$desc
eof

CWD=\`pwd\`
makepkg() { cp \$CWD/\`basename \$1\` \$1; }
makepkg \$TMP/$name-\$VERSION-\$ARCH-\$BUILD.tgz
EOF
done <$t/DroplineFiles$DROPLINE_VER

# done? make the changes valid
for file in $FILES; do
  mv $t/$file $TREE/
done

rm -f $CACHE/slk
