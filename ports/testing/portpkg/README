WARNING! THIS IS AN EXPERIMENTAL TESTING RELEASE!

Major changes:

* Virtual groups in /usr/ports/virtual:

  # portpkg mplayer/

  Will install all packages from the virtual group in 
  /usr/ports/virtual/mplayer. A virtual group needs only a directory for
  each port and therein a file SlackBuild with the lines "VERSION=",
  "ARCH=" and "BUILD=". There will be examples in the ports tree. This
  can be very interesting in conjunction with the use list in the
  future, when there're more virtual groups defined. 

* "Multiports": One script - two packages

  For more compatibility with original Slackware SlackBuild-scripts
  (e.g. gcc/glibc) that produce more than one package.

  Notes for multiports:
  * Don't use $NAME for each makepkg!
  * Every makepkg has to be explicit (no "for i; do makepkg; done"!)
  * Names of produced package must have only $VERSION, $ARCH and/or $BUILD!
  * Groups _should_ match
  * Nevertheless, link any sub-port to the super-port (e.g. "gcc-g++ -> gcc")

* "Turbo mode": like *BSD portsystems:

  Example:

  # cd /usr/ports/xap/mozilla
  # portpkg

  This is also a bit faster, because portpkg doesn't need to search the ports
  tree first in this mode (also does --noreqs).

* No more .local files in /etc/portpkg!

  Portpkg now uses the normal Slackware style for etc-files (.new
  files). Please edit your files in /etc/portpkg/ to your needs, they
  won't be overwritten on upgrades.

* CVS/SVN support for sources

  It should be now possible to use CVS as a resource in your ports. E.g.
  the "sources" file will look like this:

  cvs://:pserver:anonymouse@cvs.bla.net:/cvsroot/bla/$NAME
  svn://svn.videolan.org/x264/trunk/x264

  The default CVS (and SVN) storage dir is /usr/src/cvs and can be
  changed with CVS_DIR=... in /etc/portpkg/local.conf. Portpkg makes a
  symlink to the port dir before starting the SlackBuild. Use it in your
  SlackBuild as

  ...
  # here would be normal tar xjvf $CWD/$NAME-$VERSION.tar.bz2
  cp -av $CWD/$NAME/ . # <-- watch out the trailing /
  cd $NAME || exit 1
  ...

* Import/export system

  The ports collection of Portpkg is a seperate importer script now, 
  that can be turned on and off with pp-config. Also, an export method
  can be defined to submit ports anonymously via HTTP (goes into open/)
  or via CVS if you have a developer account. Nevertheless, the CVS
  server url can be modified in a mirrors file.

* Use

  Dependencies that are optional AND shall be installed by portpkg when
  needed can be written to this list. Best known example is if you WANT
  GNOME dependencies for packages you are building, you SHOULD add
  gnome/ here!

Furthermore:

Portpkg:
* Handle optional dependencies in "requires" now as "# optional: dependency".
* Add newly found dependencies as optional.
* Connect arguments in --find with AND not OR.
* Fixed using of custom $TMP
* Removed "pseudo" files
* Remove arbitrary source files (%-style in "sources") after package building
* No more "arbitrary" files, only warning message
* No more ".wgetlogs"
* Don't log a dry-run
* Execute SlackBuilds with "sh -e" on default
* neglect architecture diffs for i?86
* Improvements to the Slackware source importer
* Use pathname expansion rather than regular expressions in mirror files
  (http://*.dl.sf.net/ instead of http://.*\.dl\.net/)
* Removed Bash-specific syntax (should work now with ash)
* Some speed enhancements
* Use unlisted packages in cache for dependencies
* Replaced $ADM_DIR/portpkg with $LOG_DIR in order to make it costumisable
*

Autoport:
* Support also .patch.gz and doinst.gz
* Check for KDEDIRS and use prefix /opt/kde
* Add schemas files explicit to doinst.sh
* Removed "|| exit 1"
* Remove empty files in /usr/share/mime/
* Support CVS sources
* Removed Bash-specific syntax (should work now with ash)
*

* Some more changes

Enjoy.
--tom

Delayed:
* Support for different repositories (CVS and HTTPUP) (/etc/portpkg/repos)
* Removed "importers" subsystem
* PGP/GPG-Support
* Ignore case in package expressions, dependencies and --diff

TODO:
* Turbo mode should be comfortable with LAZY_CHECKS, not NO_REQS
* Make LAZY_CHECKS in turbo mode faster
* Enable running portpkg as non-root
* Integrate non-root configuration set in pp-config
