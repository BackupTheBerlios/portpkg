Upcoming Release: Major Changes

   This page is meant to inform maintainers and users of the major changes in
   the upcoming release of portpkg, which will be version 0.38.

  Better Dryrun Mode

   On popular request I have done some work for the dryrun mode in order to
   give some more meaningful output of what would happen. A screenshot of the
   enhanced dryrun output is here:

 $ portpkg --dryrun digikam

 Preparing for digikam-0.7.2-i686-6andreas:
   --> Requiring kdelibs-3.4.2-i486-1
   --> Requiring libkexif-0.2.1-i686-1andreas
   --> Downloading libkexif-0.2.1.tar.bz2
   --> Executing /usr/ports/kde/libkexif/SlackBuild
   --> Requiring libkipi-0.1.1-i686-1andreas
   --> Downloading libkipi-0.1.1.tar.bz2
   --> Executing /usr/ports/kde/libkipi/SlackBuild

 Building digikam-0.7.2-i686-6andreas:
   --> Downloading digikam-0.7.2.tar.bz2
   --> Executing /usr/ports/kde/digikam/SlackBuild

 Installing digikam-0.7.2-i686-6andreas...
 PACKAGE DESCRIPTION:
 digikam: digiKam is a simple digital photo management application for KDE
 (...)

   And here:

 $ ./portpkg --dryrun kde/

 Resolving implicit declarations:  qt kdebase kdelibs kdetoys kdewebdev
    koffice kdeartwork kdebindings kdeadmin kdeaccessibility kdegames
    kdegraphics kdeedu kdepim kdesdk kdevelop kdeutils kdeaddons kdenetwork
    kdemultimedia kipi-plugins digikam libkipi showimg amarok thinkeramik
    superkaramba digikamimageplugins libkexif knetworkconf gwenview
    k3bmonkeyaudioplugin

 Installing qt-3.3.4-i486-2...
 PACKAGE DESCRIPTION:
 qt: Qt (a multi-platform C++ graphical user interface toolkit)
 (...)

  Reduction Of Port Controller Files

   Obsolete
           * arbitrary (there will be only a warning message on the screen
             and in the log file)
           * pseudo (obsolete, handled automatically)
           * optional (goes into requires as # optional: port)
           * blocks (goes into requires as # block: port)
           * slot-in (goes into flags)
           * no-fakeroot (goes into flags)

   New
           * flags with entries:

                o slot-in
                o no-fakeroot
                o rebuild
                o verbose
                o reinstall

  Virtual Groups

   In /etc/portpkg/virtual is a place to define virtual groups. Example:

 # cat >/etc/portpkg/virtual/mplayer <<EOF
 mplayer
 mplayer-codecs
 mplayer-skins
 EOF
 # portpkg --list mplayer/
 mplayer/mplayer
 mplayer/mplayer-codecs
 mplayer/mplayer-skins

   This example will install all three packages from the virtual group
   mplayer/. This can be very interesting in conjunction with the use list,
   when there're more virtual groups defined.

  Multiports

   One script - two packages: For more compatibility with original Slackware
   SlackBuild-scripts (e.g. gcc/glibc build scripts) that produce more than
   one package.

  Turbo Mode

   In analogy to *BSD portsystems. Example:

 # cd /usr/ports/xap/mozilla
 # portpkg

   This is also a bit faster, because portpkg doesn't need to search the
   ports tree first in this mode (also implies --noreqs).

  Configuration File Conventions

   No more .local files in /etc/portpkg! Portpkg now uses the normal
   Slackware style for etc-files (.new files). Please edit your files in
   /etc/portpkg/ to your needs, they won't be overwritten on upgrades.

  CVS And SVN Support For Sources

   It should be now possible to use CVS as a resource in your ports. E.g. the
   "sources" file will look like this:

 cvs://:pserver:anonymouse@cvs.bla.net:/cvsroot/bla/$NAME
 svn://svn.videolan.org/x264/trunk/x264

   The default CVS (and SVN) storage dir is /usr/src/cvs and can be changed
   with CVS_DIR=directory in /etc/portpkg/local.conf. Portpkg makes a symlink
   to the port dir before starting the SlackBuild. Use it in your SlackBuild
   as

 (...)
 # here would be normal tar xjvf $CWD/$NAME-$VERSION.tar.bz2
 cp -av $CWD/$NAME/ . # <-- watch out the trailing /
 cd $NAME || exit 1
 (...)

  Modular Import/Export System

   The ports collection of Portpkg is a seperate importer script now, that
   can be turned on and off with pp-config. Also, an export method can be
   defined to create a plain tarball of your port in /tmp, to submit your
   port automatically via HTTP or via CVS if you have a developer account.
   Nevertheless, the CVS server url can be modified in a mirrors file.

  Use List

   Dependencies that are optional and shall be installed by portpkg when
   needed can be written to this list. Best known example is if you want
   GNOME dependencies for packages you are building, you should add gnome/
   here!

  Furthermore

   Portpkg
           * Add newly found dependencies as optional.
           * Connect arguments in --find with AND not OR.
           * Execute SlackBuilds with "sh -e" on default
           * Neglect architecture diffs for i?86
           * Improvements to the Slackware source importer
           * Use pathname expansion rather than regular expressions in mirror
             files
           * Removed Bash-specific syntax (should work now with Ash)
           * Use unlisted packages in cache for dependencies

   Delayed/Todo
           * Support for different repositories (CVS and HTTPUP)
             (/etc/portpkg/repos)
           * PGP/GPG-Support

   Enjoy. --tom

   --------------------------------------------------------------------------


References

   Visible links
