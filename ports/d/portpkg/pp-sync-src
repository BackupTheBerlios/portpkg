#!/bin/sh
# pp-sync-src -- A portpkg-addon for using Slackware's source code as ports.

if ! [ `basename $0` == portpkg ]; then
  echo
  echo "Please run 'pp-config' and start me as: portpkg --sync"
  exit 1
fi

[ "${DIST_VER:-}" ] || die "No distribution target set. Please run 'pp-config'!"
[ "${SRC_PRT_DIR:-}" ] || die "No path set. Please run 'pp-config'!"
# this will be mangled through our mirrors-list anyway
DIST=ftp://ftp.slackware.com/pub/slackware/slackware-$DIST_VER

t=`mktemp -d`
row "Syncing $SRC_PRT_DIR with `echo $DIST | cut -d / -f 3`"

# Should be better to have current SlackBuilds as default, so don't ask.
#[ "$DIST_VER" ] || die "No distribution target set. Please run 'pp-config'!"
[ "$SRC_PRT_DIR" ] || die "No path set. Please run 'pp-config'!"
RSYNC=rsync://rsync.slackware.at/slackware/slackware-current/source
DIST=ftp://ftp.slackware.com/pub/slackware/slackware-current

mkdir -p $SRC_PRT_DIR
cd $SRC_PRT_DIR || die
has_prog rsync || die

# sync source/ and remove files we don't need
rsync -avz --delete \
--exclude "FILE_LIST" \
--exclude "MANIFEST.*" \
--exclude "CHECKSUMS*" \
--exclude "README.TXT" \
--exclude "*.tar.gz" \
--exclude "*.tar.bz2" \
--exclude "*.tgz" \
--exclude "*.tar.Z" \
--exclude "*.bin" \
--exclude "*.zip" \
$RSYNC/* .

# write missing files into sources-files
row "Retrieving file list"
get $DIST/FILELIST.TXT $t/file_list
if [ -f $SRC_PRT_DIR/FILELIST.TXT ] \
&& [ "`cat $t/file_list | md5sum`" == "`cat $SRC_PRT_DIR/FILELIST.TXT | md5sum`" ]; then
  # nothing new
  :
else
  # changes
  row "Constructing `find $SRC_PRT_DIR/ -name "*SlackBuild" | wc -l` (clean SlackBuild-) ports"
  # for any file
  grep -o "\./source/.*/.*/.*" $t/file_list \
  | cut -d " " -f 1 | cut -d / -f 3- | while read s; do
    # if not found, add it to "sources"
    if ! find $s >/dev/null 2>&1; then
#	echo `echo $s | cut -d / -f 3-`
#    else
	echo $DIST/source/$s
    fi | grep -ve "SlackBuild$" -e "^slack-desc$" -e "^doinst.sh" \
    >>`echo $s | cut -d / -f 1-2`/sources
  done

  row "Constructing `find $SRC_PRT_DIR/ -name "*.build" | wc -l` .build-wrapper-ports"
  find -name "*.build" | while read s; do
    dir=`dirname $s`
    gname=`dirname $s | cut -c 3-`
    group=`echo $gname | cut -d / -f 1`
    name=`echo $gname | cut -d / -f 2`
    ver=`grep ^VERSION= $s | cut -d = -f 2-`
    arch=`grep ^ARCH= $s | cut -d = -f 2- | sed -re "s,\\\\$\\{[A-Z]*:-,," -e "s,},,"`
    build=1
    cat <<EOF >$dir/SlackBuild
NAME=$name
VERSION=$ver
ARCH=$arch
BUILD=$build

checkinstall -S -y \\
  --pkgname=\$NAME \\
  --pkgversion=\$VERSION \\
  --pkgarch=\$ARCH \\
  --pkgrelease=\$BUILD \\
  --pakdir=/tmp \\
  --strip=yes \\
  --stripso=yes \\
  --gzman=yes \\
  --backup=no \\
  "sh `basename $s`" || exit 1
EOF
  done
fi
