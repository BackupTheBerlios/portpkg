[1]MaintainerGuide

   This page addresses the process of creating new ports. Sorry, this page
   hasn't yet been translated.

1. Preparing

  1.1 Maintainer Mode^1

   For maintaining ports, portpkg can make some extra checks to assure the
   ports have been built correct. So maintainers should have their own tag to
   have portpkg identify their ports. This is done with the first use of
   addport and will be written to the file /usr/ports/local.conf, which looks
   something like this:

 MY_TAG=me
 MY_EMAIL=myself@here.org
 MY_REALNAME="I. M. Weasel"

   Tags will be added to the revision number of ports and therefore have to
   be written in every SlackBuild (BUILD=1me).

  1.2 Classifying Ports

   Why is that so important? -- Ports can be tracked as requirements later by
   other ports. To avoid cluttering we should follow a naming scheme.

   Every package/port is composed of at least 4 segments divided by "-".
   Count from the tail (by leaving out .tgz): the revision (or build), the
   architecture (or noarch for architecture independend ports), the version
   and anything remaining is the "name":

 this-is-a-package-1.0-noarch-1.tgz
 |                 |   |      |
 name              ver.arch.  revision

   On naming a new port it is best to come from the source package:

 http://download.sourceforge.net/mjpeg/mjpegtools-1.6.2.tar.gz

   That was easy: The name is mjpegtools, the version is 1.6.2, the
   architecture would be i486 an a x86 machine. So our port will be called
   mjpegtools-1.6.2-i486-1me.tgz, because it is our first try. Now, we make a
   directory called mjpegtools in our group (which is here ap/) where all the
   scripts can be written for this port.

   Note: Ports should be portable for other architectures than x86 (s390 and
   x86_64), so if the code will be architecture-dependend, ARCH has to be
   {ARCH:-i486}, which means, that i486 is the default'' architecture,
   otherwise it has to be noarch.

   Besides versions cannot have a "-" inside. Futhermore names cannot have
   capitals.

   ---------------------------------------------------------------------------

2. Ports and their Parts

  2.1 SlackBuild

   The file SlackBuild on its own determines the layout of the resulting
   package. It is a bash-script and is executed when portpkg builds a binary
   package for installation. Generally, SlackBuilds needs to be specially
   adjusted to a source package.

   In the root directory of the ports tree, there's a SlackBuild-skeleton,
   that should be used as template and should be modified step-by-step if it
   doesn't fit the needs of the installation procedure.

   Please follow the basic filesystem layout in Slackware:

   +----------------------+
   |Configuration|/etc    |
   |-------------+--------|
   |Variable data|/var/lib|
   |-------------+--------|
   |Prefix       |/usr    |
   +----------------------+

   The [2]Filesystem Hierarchy Standard, which is followed by Slackware,
   makes exceptions only for very few programmes, that are essential for
   booting the system or for big and closed software packages like /opt/kde.

   Executable files in bin/ and sbin/ directories have to be owned by
   root.bin.

   The directory /usr/local, which is the default prefix, should never be
   used for packages, but only for installations by hands. The same is in the
   other way sround.

   "Why does my package have such a fantastic compression ratio?"

   Always have a look at footprint^1 to find misfits earlier.

   If something doesn't need to be patched, please don't patch it!

  2.2 doinst.sh

   (...)

  2.3 sources^1

   Source package URLs should be written in sources. To make version updates
   later easier, use the string $VERSION where the version number of the
   package is placed. portpkg will download these files into the port
   directory before running the SlackBuild. After that, they will be stored
   in /usr/src/dist. If a file should be saved with a different name than its
   URL calls it, use a "%" before that. Example:

 http://www.host.org/downloads/package-$VERSION.tar.gz
 http://www.host.org/downloads/package-addon-$VERSION.tar.gz
 http://www.host.org/downloads/download.php?file=data%package-data

   Please list only primary download sites here.

  2.4 slack-desc

   Example slack-desc:

 shortname: Projectname (short desciption)
 shortname:
 shortname: Here can be a longer and deeper going description of the package.
 shortname: Note that you do not go behind 75 characters and 11 lines.

  2.5 slot-in^1

   Packages a port builds normally are "installed" with upgradepkg. That
   means if another version of the port is already installed, this old one is
   being replaced with the new one.

   E.g.: mplayer-1.0pre4-i486-1tom is already installed,
   mplayer-1.0pre5-i486-1tom is available in the ports, so the command
   portpkg mplayer just removes the first one to install the last one.

   If this behaviour is not intended, mostly for packages like kernels or
   kernel-modules, there's the possibility to mark a port as a "slot-in":

 # touch slot-in

  2.6 pseudo^1

   The empty file pseudo marks a "pseudo port", as you can see in the ports
   tree sync-dist builds. These pseudo ports list binary Slackware packages
   as their souce packages, therefore the presents of slot-in instructs
   portpkg not to store them in /usr/dist when the installation is done.

   Nore: This is more for the sake of completeness, it is subject to be
   removed if Portpkg implements a way of interacting with Slackware
   repository tools.

  2.7 requires^1

   The file requires contains dependend packages and ports portpkg tracks in
   the maintainer mode after compiling. These packages and ports are required
   for compiling this port, so the next time this port is to be build,
   portpkg makes sure, this list is met. You shouldn't write this file by
   hand normally, but there may be dependencies that cannot be found
   automatically, then add them. In requires, no dependencies will be removed
   by portpkg.

  2.8 PORT_IS_BROKEN, arbitrary, buildlog, diff, footprint

   Several files are available in maintainer mode to indicate the result of
   the package making process:

   +------------------------------------------------------------------------+
   |PORT_IS_BROKEN|Marks a failure of the last compilation                  |
   |--------------+---------------------------------------------------------|
   |arbitrary     |Lists any dependency from requires that couldn't be      |
   |              |tracked automatically                                    |
   |--------------+---------------------------------------------------------|
   |buildlog      |Is a detailed log of the SlackBuild-output               |
   |--------------+---------------------------------------------------------|
   |diff          |Is a comparison to the SlackBuild-skeleton               |
   |--------------+---------------------------------------------------------|
   |footprint     |Is a file list of the package content                    |
   +------------------------------------------------------------------------+

   ---------------------------------------------------------------------------

3. The Configuration of Portpkg^1

  3.1 local.conf

   +------------------------------------------------------------------------+
   |MY_TAG=tag             |Your personal tag                               |
   |-----------------------+------------------------------------------------|
   |MY_EMAIL=email         |Your mail address for contacting you if you plan|
   |                       |to contribute                                   |
   |-----------------------+------------------------------------------------|
   |MY_REALNAME="real name"|Your real name for contacting you if you plan to|
   |                       |contribute                                      |
   |-----------------------+------------------------------------------------|
   |MAINTAIN_ALL=true      |Let portpkg always work in maintainer mode      |
   |-----------------------+------------------------------------------------|
   |DIST_VER=version       |The target Slackware version if you use         |
   |                       |sync-dist or sync-slack                         |
   |-----------------------+------------------------------------------------|
   |verbose=true           |Let portpkg always work in verbose mode         |
   |                       |(--verbose)                                     |
   |-----------------------+------------------------------------------------|
   |no_reqs=true           |Let portpkg always work without requirements    |
   |                       |resolving (--noreqs)                            |
   +------------------------------------------------------------------------+

  3.2 mirrors and mirrors.local

   While in sources you should list the primary download URLs, in mirrors
   there're global mirror sites for common source package locations. If you
   want to have some special mirror sites for your own, write them into
   mirrors.local.

  3.3 ignore and ignore.local

   Normally, dependencies are tracked automatically by portpkg in the
   maintainer mode after compiling and written to the file requires. If you
   find any dependencies in requires that shouldn't be tracked, write them
   into ignore.local:

     o Packages or ports, that are optional: mostly newer versions of
       libraries included in other Slackware packages (e.g. freetype,
       fontconfig etc. are already included in Slackware's x11 package)
     o Packages or ports being useless to track, because they're already and
       for sure installed (e.g. aaa_elflibs)

   A global list of common ignored dependencies is in ignore.

  3.4 exclude and exclude.local

   (...)

   ---------------------------------------------------------------------------

   Note: ^1 specific to the programme portpkg

   ---------------------------------------------------------------------------

          [3]EditThisPage [4]BackLinks [5]PageInfo last changed on Sat Dec 04
                                                                11:50:11 2004

References

   Visible links
   1. file:///usr/ports/d/portpkg/doc.php?page=links/MaintainerGuide
   2. http://www.pathname.com/fhs/pub/fhs-2.3.html
   3. file:///usr/ports/d/portpkg/doc.php?page=edit/MaintainerGuide
   4. file:///usr/ports/d/portpkg/doc.php?page=links/MaintainerGuide
   5. file:///usr/ports/d/portpkg/doc.php?page=info/MaintainerGuide
