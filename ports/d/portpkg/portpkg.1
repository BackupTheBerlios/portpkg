.TH PORTPKG 1 "February 2005" "Slackware Linux" "User Manuals"
.SH NAME
portpkg \- build a package by source and install it
.SH SYNOPSIS
portpkg [action] [options] [list [...]]
.PP
While 'list' can have one of these forms:
.IP
group/
.IP
[group/]name[-version-arch-build]
.SH DESCRIPTION
Portpkg starts a so called build script (SlackBuild) found in
/usr/ports/<group>/<name>/ and installs the resulting package to the system.
The default behaviour will let it check for dependant ports and packages and
build them in order to satisfy requirements. Portpkg will always try to
shorten and reuse existing files: It resumes automatically partly downloaded
source files and makes use of its cache directories.
.SH ACTIONS
If no action is specified, the default action is to install a port, which
includes downloading source code, compiling and packaging if neccessary. There
can be only one alternative action:
.IP "-d, --diff"
List the difference between installed and available port versions.
.IP "-f, --find"
Find ports by search patterns.
.IP "-h, --help"
Show help page.
.IP "-i, --info"
Show information about ports.
.IP "-l, --list"
List all (or specified) available ports.
.IP "-s, --sync"
Sync the ports tree with the official tree and the package directory with the
ports tree.
.IP "-u, --upgrade"
Upgrade all (!) outdated ports shown by --diff.
.IP "-v, --version"
Show version information about Portpkg.
.IP "-x, --export"
Submit ports to the Portpkg Project.
.SH OPTIONS
There can be multiple options at once to customise portpkg's behaviour (some of
them can also be defined in /etc/portpkg/local.conf, see below):
.IP "-e, --reinstall"
Reinstall the package, if already installed.
.IP "-b, --rebuild"
Rebuild the package if already build (implies --reinstall).
.IP "-p, --prepare"
Build package, but don't install (implies --noreqs).
.IP "-o, --download"
Download source code files only.
.IP "-g, --verbose (VERBOSE=true)"
Show compile output.
.IP "-y, --dryrun"
Simulate install/download/build.
.IP "-q, --noreqs (NO_REQS=true)"
Don't check for requirements.
.IP "-a, --lazy (LAZY_CHECKS=true)"
Don't upgrade dependencies to newest version.
.SH EXAMPLES
.IP "Port 'foobar' (download source code, compile, package, install), show compile output, but don't check dependencies:"
portpkg -gq foobar
.IP "List all installed packages which have a newer availabe version in the ports tree:"
portpkg --diff
.IP "Find any ports, that contain the string 'moz' in their description:"
portpkg --find moz
.IP "Give information about the ports 'mozilla' and 'galeon':"
portpkg --info mozilla galeon
.IP "List all available ports:"
portpkg --list
.IP "List all available ports of one group or with certain conditions:"
portpkg -l l/ foo n/arg foobar-1.0-i486-1
.IP "Sync the local ports tree with the official ports tree:"
portpkg --sync
.IP "Upgrade any port that is listed by --diff:"
portpkg --upgrade
.SH DIRECTORIES
.IP /usr/ports
The ports tree. Customise this path with PRT_DIR=<path> in
/etc/portpkg/local.conf.
.IP /usr/src/dist
The source code files archive. Files that were downloaded before compiling.
Customise this path with SRC_DIR=<path> in /etc/portpkg/local.conf.
.IP /usr/obj/pkg
The binary packages archive. Customise this path with PKG_DIR=<path> in
/etc/portpkg/local.conf.
.SH FILES
.IP /etc/portpkg/local.conf
The configuration file for optional settings. Empty or non-existend for
defaults.
.IP /tmp/buildlog-<name>
The detailed output when a SlackBuild was executed. You can view this instantly
with --verbose. 
.PP
Several configuration files are distributed and can be expanded by \.local files:
.IP "/etc/portpkg/mirrors and mirrors.local"
List of mirrors to be used when downloading files. 
.IP "/etc/portpkg/ignore and ignore.local"
List of ports to ignore when making the "requires" file.
.IP "/etc/portpkg/exclude and exclude.local"
List of ports to exclude when doing upgrades or diffs.
.SH AUTHOR
Thomas Pfaff <topf at users dot berlios de>
.SH "SEE ALSO"
.BR installpkg(8)
.BR removepkg(8)
.BR upgradepkg(8)  	
