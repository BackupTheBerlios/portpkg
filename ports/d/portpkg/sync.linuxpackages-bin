#!/bin/sh
#BLURB="Linuxpackages.net binaries"
#
# This plugin is a generic Slackware-style repo importer. It creates port
# scripts, that--instead of building packages by source--download a certain
# binary package from a repo. (Such a repo needs to have the files
# ChangeLog.txt, FILELIST.TXT, PACKAGES.TXT and CHECKSUMS.md5.)
#
# How to use this plugin? Copy this file to e.g. sync.my-fav-repo and edit
# the lines SOURCE= and TREE= and enable the plugin with pp-config.

SLACK_VER=`cut -d " " -f 2 /etc/slackware-version | cut -d . -f 1-2`
SOURCE=ftp://ftp3.linuxpackages.net/pub/Slackware-$SLACK_VER
FILES="CHECKSUMS.md5 FILELIST.TXT PACKAGES.TXT"
TREE=$PRT_DIR/z/bin/linuxpackages

# check that we're a plug-in
if  [ "`basename $0`" != "portpkg" ]; then
  echo "I'm a plugin. Don't run me!"
  exit 1
fi

row "Syncing $TREE"
t=`mktemp -d`
mkdir -p $TREE 2>/dev/null || die "No write access to $TREE!"

# check the first file for changes
first=`echo $FILES | cut -d " " -f 1`
get $SOURCE/$first $t/$first || die
if [ -f $TREE/$first ] && cmp -s $t/$first $TREE/$first; then
  # exit silently
  exit 0
fi

# get the rest
rest=`echo $FILES | cut -d " " -f 2-`
for file in $rest; do
  row "Retrieving $file"
  get $SOURCE/$file $t/$file
done

# rebuild the tree
row "Rebuilding pseudo ports"
rm -rf $TREE
mkdir -p $TREE

# make a *simple* file list
grep -v ^d $t/FILELIST.TXT | sed "s,.* ,,;s,^\./,," >$t/files

# since portpkg's dependency handling is rather simple, we trim version
# handling and interpret alternatives as optional dependencies
sed -r "\
/REQUIRED/s/,/\nPACKAGE REQUIRED:  /g
/SUGGESTS/s/,/\nPACKAGE SUGGESTS:  /g
/CONFLICTS/s/,/\nPACKAGE CONFLICTS:  /g" $t/PACKAGES.TXT >$t/packages
sed -ri "/REQUIRED.* \| /{s/REQUIRED/SUGGESTS/;s/ \| /\nPACKAGE SUGGESTS:  /g}" $t/packages
sed -ri "s/ [<>=]+ .*$//" $t/packages

# find each binary packages
grep "/[^/]*-[^/-]*-[^/-]*-[^/-]*\.tgz$" $t/files | egrep -v "(^|/)source/" \
| while read s; do
  group=`echo $s | sed "s,^\./,,;s,/[^/]*$,,"`
  pkg=`echo $s | sed "s,.*/,,;s,\.tgz$,,"`
  name=`echo $pkg | pkg2name`
  rel=`echo $pkg | pkg2rel`
  ver=`echo $rel | cut -d - -f 1`
  arch=`echo $rel | cut -d - -f 2`
  build=`echo $rel | cut -d - -f 3`
  md5sum=`grep "/$pkg\.tgz$" $t/CHECKSUMS.md5 | sed "s,  .*/,  ,"`
  info=`sed -n "/ $pkg\($\| \|\.tgz\)/,/^$/p" $t/packages | sed -n "1,/^$/p"`
  desc=`echo "$info" | grep "^$name:"`
  req=`echo "$info" | grep REQUIRED | cut -d " " -f 4- | xargs`
  opt=`echo "$info" | grep SUGGESTS | cut -d " " -f 4- | xargs`
  blk=`echo "$info" | grep CONFLICTS | cut -d " " -f 4- | xargs`

  # make the SlackBuild
  path=$TREE/$group
  mkdir -p $path
  cat >$path/$name.SlackBuild <<EOF
#!/bin/sh
# This is a pseudo port--it may look absurd
# MAINTAINER: Portpkg Project <http://portpkg.berlios.de>
# SOURCES: $SOURCE/$group/$pkg.tgz
# MD5SUMS: $md5sum
# REQUIRES: $req
# OPTIONAL: $opt
# BLOCKS: $blk

TMP=\${TMP:-/tmp}

VERSION=$ver
ARCH=$arch
BUILD=$build

cat >/dev/null <<eof
$desc
eof

CWD=\`pwd\`
cp \$CWD/$name-\$VERSION-\$ARCH-\$BUILD.tgz \$TMP/
EOF
done

# done? make the changes valid
for file in $FILES; do
  mv $t/$file $TREE/
done
