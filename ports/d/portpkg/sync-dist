#!/bin/bash -u
# sync-dist - portpkg-addon for using slackware packages as pseudo ports

#include "portpkg.h"
source `which portpkg` || exit 1

DIST=ftp://ftp.slackware.com/pub/slackware
SECTIONS=(extra testing kernels slackware pasture)
TREE=/usr/src/pseudo/dist

t=`private`
is_root || die
rm -rf $TREE
mkdir -p $TREE
[ -f $PRT_DIR/pseudo ] && . $PRT_DIR/pseudo
DIST_VER=${DIST_VER:-}
while ! [ "$DIST_VER" ]; do
  echo
  echo -n "What distribution is your target? (e.g. \"10.0\", \"current\")  "
  read DIST_VER
  echo "DIST_VER=$DIST_VER" >>$PRT_DIR/pseudo
done
DIST=$DIST/slackware-$DIST_VER
stanza "Syncing with `echo $DIST | cut -d / -f 3`:"
row "Retrieving meta data"
get $DIST/FILELIST.TXT $t.file_list
get $DIST/PACKAGES.TXT $t.packages
get $DIST/kernels/VERSIONS.TXT $t.kernel_versions
cat $t.file_list | tr -s " " | cut -d " " -f 8 | cut -c 3- >$t.files
for section in ${SECTIONS[@]}; do
  cd $TREE || die
  mkdir $section
  cd $section
  row "Preparing pseudo ports for $section/"
  if [ "$section" == "kernels" ]; then
    kver=`grep -o "[0-9]\.[0-9]\.[0-9][0-9]" $t.kernel_versions`
    karch=`grep -o "glibc-.*\.tgz$" $t.file_list \
    | grep $(regex glibc) | rev | cut -d - -f 2 | rev | head -n 1`
    grep \./kernels/ $t.file_list | grep ^d | rev | cut -d / -f 1 \
    | rev | grep -v modules | while read flavour; do
      mkdir -p kernels/$flavour
      cat <<EOF >kernels/$flavour/SlackBuild
NAME=$flavour
VERSION=$kver
ARCH=$karch
BUILD=1

CWD=\`pwd\`
PKG=/tmp/package-\$NAME
rm -rf \$PKG
mkdir -p \$PKG/boot
cd \$PKG/boot
cat \$CWD/bzImage >vmlinuz-$flavour-$kver
cat \$CWD/System.map.gz >System.map-$flavour-$kver.gz
cat \$CWD/config >config-$flavour-$kver
gunzip System.map-$flavour-$kver.gz
ln -s vmlinuz-$flavour-$kver vmlinuz
ln -s System.map-$flavour-$kver System.map
ln -s config-$flavour-$kver config
cd \$PKG
makepkg -l y -c n /tmp/\$NAME-\$VERSION-\$ARCH-\$BUILD.tgz
EOF
      cat <<EOF >kernels/$flavour/sources
$DIST/kernels/$flavour/bzImage
$DIST/kernels/$flavour/System.map.gz
$DIST/kernels/$flavour/config
EOF
      echo "$flavour: Linux-$kver ($flavour)" >kernels/$flavour/slack-desc
      touch kernels/$flavour/pseudo
      touch kernels/$flavour/slot-in
    done
    continue
  fi
  grep "^$section/.*\.tgz$" $t.files \
  | sed -r "s,^[^/]*/(.*)\.tgz$,\1," \
  | while read s; do
    if [ "$section" == "slackware" ]; then
      group=`echo $s | cut -d / -f 1`
    else
      group=$section
    fi
    pkg=`echo $s | sed -r "s,^.*/(.*)$,\1,"`
    name=`echo $pkg | pkg2name`
    rel=`echo $pkg | pkg2rel`
    ver=`echo $rel | cut -d - -f 1`
    arch=`echo $rel | cut -d - -f 2`
    build=`echo $rel | cut -d - -f 3`
    mkdir -p $group/$name
    cat <<EOF >$group/$name/SlackBuild
VERSION=$ver
ARCH=$arch
BUILD=$build

CWD=\`pwd\`
cp \$CWD/$pkg.tgz /tmp
EOF
    echo "$DIST/$section/$s.tgz" >$group/$name/sources
    grep "^$name:" $t.packages >$group/$name/slack-desc
    touch $group/$name/pseudo
  done
done
cd $TREE
# make slot-ins for kernel-modules to allow coexistence with 2.4-modules
touch slackware/k/kernel-source/slot-in
touch slackware/a/kernel-modules/slot-in
touch slackware/l/alsa-driver/slot-in
touch testing/testing/kernel-source/slot-in
touch testing/testing/kernel-modules/slot-in
touch testing/testing/alsa-driver/slot-in

stanza "Pseudo ports are now in $TREE."
stanza "Please link them into $PRT_DIR in your favoured sequence. The \
sequence is essential for --upgrade. Remember: The first found port is the \
default port! You have also $PRT_DIR/exclude to fine tune the upgrade list."
stanza "Good style: Z[0-9]: Before all other ports
            z[0-9]: After all other ports"
stanza "\
E.g.: ln -s $TREE/patches $PRT_DIR/z0\n\
      ln -s $TREE/extra $PRT_DIR/z1\n\
      ln -s $TREE/kernels $PRT_DIR/z2\n\
      ln -s $TREE/slackware $PRT_DIR/z3\n\
      ln -s $TREE/testing $PRT_DIR/z4\n\
      ln -s $TREE/pasture $PRT_DIR/z5"
if ! [ "`find $PRT_DIR/ -type l -name "z?" 2>/dev/null`" ]; then
  stanza "Since there seem to be no links at all I will make that for you..."
  ln -s $TREE/patches $PRT_DIR/z0
  ln -s $TREE/extra $PRT_DIR/z1
  ln -s $TREE/kernels $PRT_DIR/z2
  ln -s $TREE/slackware $PRT_DIR/z3
  ln -s $TREE/testing $PRT_DIR/z4
  ln -s $TREE/pasture $PRT_DIR/z5
fi
